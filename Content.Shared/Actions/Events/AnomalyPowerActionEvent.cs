using Content.Shared.Anomaly.Effects.Components;
using Robust.Shared.Audio;

namespace Content.Shared.Actions.Events;

public sealed partial class AnomalyPowerActionEvent : InstantActionEvent
{

    [DataField]
    public string PowerName;

    /// <summary>
    ///     The minimum amount of glimmer generated by this power.
    /// </summary>
    [DataField]
    public int MinGlimmer;

    /// <summary>
    ///     The maximum amount of glimmer generated by this power.
    /// </summary>
    [DataField]
    public int MaxGlimmer;

    /// <summary>
    ///     The amount to multiply glimmer generation by when above the Supercritical Threshold
    /// </summary>
    [DataField]
    public int SupercriticalGlimmerMultiplier = 1;

    /// <summary>
    ///     The threshold of glimmer at which this power will play a sound.
    /// </summary>
    [DataField]
    public float GlimmerSoundThreshold;

    /// <summary>
    ///     The glimmer threshold(divided by amplification and multiplied by dampening) at which this power will act as a Supercritical Anomaly.
    /// </summary>
    [DataField]
    public float SupercriticalThreshold = 500f;

    /// <summary>
    ///     What entities will be spawned by this action, using the same arguments as an EntitySpawnAnomalyComponent?
    /// </summary>
    [DataField]
    public List<EntitySpawnSettingsEntry>? EntitySpawnEntries;

    /// <summary>
    ///     The sound to be played upon activating this power(and not Supercritically)
    /// </summary>
    [DataField]
    public SoundSpecifier? PulseSound = new SoundCollectionSpecifier("RadiationPulse");

    /// <summary>
    ///     The sound plays when this power is activated above a Supercritical glimmer threshold
    /// </summary>
    [DataField]
    public SoundSpecifier? SupercriticalSound = new SoundCollectionSpecifier("Explosion");
}
